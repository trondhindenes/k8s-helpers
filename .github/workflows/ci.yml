name: ci

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  get-version:
    name: Get Version
    runs-on: ubuntu-latest
    outputs:
      pep440: ${{ steps.get_version.outputs.pep440 }}
      is-release: ${{ steps.get_version.outputs.isRelease }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate version
        id: get_version
        uses: trondhindenes/autoversion-action@v1


  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync

  build:
    needs:
      - test
      - get-version
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "latest"

    - name: Set version
      run: |
        echo "Setting version to ${{ needs.get-version.outputs.version }}"
        sed -i "s/^version = .*/version = \"${{ needs.get-version.outputs.version }}\"/" pyproject.toml

    - name: Build package
      run: uv build

    - name: Store build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    needs:
      - build
      - get-version
    runs-on: ubuntu-latest
    if: needs.get-version.outputs.is-release == 'true'
    permissions:
      id-token: write

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
